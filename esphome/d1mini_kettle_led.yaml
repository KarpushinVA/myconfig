substitutions:
  board_name: d1mini_kettle_led
  ip_address: 192.168.1.7

esphome:
  name: ${board_name}
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: !secret wifi_ssid_k
  password: !secret wifi_pass
  domain: .localdomain
  reboot_timeout: 15min
  output_power: 17.5dB
  fast_connect: true
  power_save_mode: none
  manual_ip:
    static_ip: ${ip_address}
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8
    
logger:
  baud_rate: 0

api:
  reboot_timeout: 0s

ota:

web_server:
  port: 80

light:
  - platform: fastled_clockless
    chipset: WS2812B
    pin: GPIO5
    num_leds: 12
    rgb_order: GRB
    name: ${board_name}_Light
    id: light1
    effects:
      - random:
      - strobe:
      - addressable_rainbow:
      - addressable_color_wipe:
      - addressable_scan:
      - addressable_twinkle:
      - addressable_random_twinkle:
      - addressable_fireworks:

binary_sensor:
  - platform: status
    name: ${board_name}_Status

  - platform: gpio
    pin:
      number: GPIO4
      inverted: false
    name: ${board_name}_Motion
    device_class: motion
    id: motion_k
    # on_press:
    #   then:
    #     - if:
    #         condition:
    #           and: 
    #             - or:
    #                 - sun.is_below_horizon: 
    #                 - sensor.in_range:
    #                     id: sun_elevation
    #                     below: 5.0     
    #             - not:
    #                 binary_sensor.is_off: ha_led
    #             - light.is_off: light_s
    #         then:
    #           - light.turn_on: 
    #               id: light_s
    #               brightness: 25%
    
switch:
  - platform: restart
    name: ${board_name}_Restart
  
  - platform: template
    name: ${board_name}_enable_flag
    internal: true
    

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    icon: mdi:clock-outline
    id: uptime_sensor

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

  - platform: adc
    pin: VCC
    name: ${board_name}_Vcc
    update_interval: 15s    

  - platform: homeassistant
    name: ${board_name}_ha_kettle_temperature
    entity_id: sensor.mi_kettle
    unit_of_measurement: "Â°C"
    on_value_range:
      - below: 30
        then:
          - logger.log: "below 30"
          - light.turn_on:
              id: light1
              red: 0%
              green: 0%
              blue: 100%  
              brightness: 75%
              transition_length: 2s
      - above: 30
        below: 35
        then:
          - logger.log: "30,35"
          - light.turn_on:
              id: light1
              red: 7%
              green: 14%
              blue: 93%  
              brightness: 75%
              transition_length: 2s              
      - above: 35
        below: 40
        then:
          - logger.log: "35,40"
          - light.turn_on:
              id: light1
              red: 7%
              green: 28%
              blue: 86%  
              brightness: 75%
              transition_length: 2s              
      - above: 40
        below: 45
        then:
          - logger.log: "40,45"
          - light.turn_on:
              id: light1
              red: 14%
              green: 28%
              blue: 86%  
              brightness: 75%
              transition_length: 2s              
      - above: 45
        below: 50
        then:
          - logger.log: "45,50"
          - light.turn_on:
              id: light1
              red: 21%
              green: 42%
              blue: 79%  
              brightness: 75%
              transition_length: 2s              
      - above: 50
        below: 55
        then:
          - logger.log: "50,55"
          - light.turn_on:
              id: light1
              red: 28%
              green: 56%
              blue: 72%  
              brightness: 75%
              transition_length: 2s              
      - above: 55
        below: 60
        then:
          - logger.log: "55,60"
          - light.turn_on:
              id: light1
              red: 35%
              green: 70%
              blue: 65%  
              brightness: 75%
              transition_length: 2s              
      - above: 60
        below: 65
        then:
          - logger.log: "60,65"
          - light.turn_on:
              id: light1
              red: 42%
              green: 84%
              blue: 58%  
              brightness: 75%
              transition_length: 2s              
      - above: 65
        below: 70
        then:
          - logger.log: "65,70"
          - light.turn_on:
              id: light1
              red: 49%
              green: 100%
              blue: 51%  
              brightness: 75%
              transition_length: 2s              
      - above: 70
        below: 75
        then:
          - logger.log: "70,75"
          - light.turn_on:
              id: light1
              red: 56%
              green: 86%
              blue: 44%  
              brightness: 75%
              transition_length: 2s              
      - above: 75
        below: 80
        then:
          - logger.log: "75,80"
          - light.turn_on:
              id: light1
              red: 63%
              green: 72%
              blue: 37%  
              brightness: 75%
              transition_length: 2s              
      - above: 80
        below: 85
        then:
          - logger.log: "80,85"
          - light.turn_on:
              id: light1
              red: 70%
              green: 58%
              blue: 30%  
              brightness: 75%
              transition_length: 2s              
      - above: 85
        below: 90
        then:
          - logger.log: "85,90"
          - light.turn_on:
              id: light1
              red: 77%
              green: 44%
              blue: 23%  
              brightness: 75%
              transition_length: 2s              
      - above: 90
        below: 95
        then:
          - logger.log: "90,95"
          - light.turn_on:
              id: light1
              red: 91%
              green: 16%
              blue: 9%  
              brightness: 75%
              transition_length: 2s              
      - above: 95
        then:
          - logger.log: "above 35"
          - light.turn_on:
              id: light1
              red: 100%
              green: 0%
              blue: 0%  
              brightness: 75%
              transition_length: 2s              



text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s

  - platform: homeassistant
    name: ${board_name}_ha_kettle_mode
    entity_id: sensor.mi_kettle_mode
    id: ha_kettle_mode
    on_value:
      - if:
          condition:
            text_sensor.state:
              id: ha_kettle_mode
              state: 'unavailable'
          then:
            - light.turn_off: light1 

time:
  - platform: homeassistant
    id: homeassistant_time