substitutions:
  board_name: d1mini_temperature_node
  
esphome:
  name: ${board_name}
  platform: ESP8266
  board: d1_mini

wifi:
  ssid: !secret wifi_ssid_k
  password: !secret wifi_pass
  domain: .localdomain
  reboot_timeout: 30min
  output_power: 17.5dB
  fast_connect: true
  power_save_mode: none
  manual_ip:
    static_ip: 192.168.1.85
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8


logger:

api:
  reboot_timeout: 0s

ota:

web_server:
  port: 80

dallas:
  - pin: GPIO05
    update_interval: 5s
    id: dallas_node
    
binary_sensor:
  - platform: status
    name: ${board_name}_Status

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s


sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

  - platform: dallas
    address: 0xF001144BC0C4AA28
    name: ${board_name}_Cold_Pipe

  - platform: dallas
    address: 0x710320977998E728
    name: ${board_name}_Hot_Hot

  # - platform: dht
  #   pin: GPIO04
  #   temperature:
  #     name: ${board_name}_Temperature
  #     unit_of_measurement: "Â°C"
  #     accuracy_decimals: 1
  #   humidity:
  #     name: ${board_name}_Humidity
  #     unit_of_measurement: "%"
  #     accuracy_decimals: 1
  #   update_interval: 5s
  #   model: AM2302

  - platform: adc
    pin: VCC
    name: ${board_name}_Vcc

switch:
  - platform: restart
    name: ${board_name}_Restart

time:
  - platform: homeassistant
    id: homeassistant_time    