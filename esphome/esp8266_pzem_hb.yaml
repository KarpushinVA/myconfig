substitutions:
  board_name: esp8266_pzem_hb

esphome:
  name: ${board_name}
  platform: ESP8266
  board: nodemcuv2
  comment: ESP8266 PZEM

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_pass
  domain: .localdomain
  reboot_timeout: 15min
  output_power: 10dB
  fast_connect: true
  power_save_mode: none
  manual_ip:
    static_ip: 192.168.1.63
    gateway: 192.168.1.1
    subnet: 255.255.255.0
    dns1: 192.168.1.1
    dns2: 8.8.8.8

logger:
  #baud_rate: 0
  
api:
  reboot_timeout: 5min

ota:

web_server:
  port: 80

uart:
  rx_pin: D6
  tx_pin: D5
  baud_rate: 9600
  stop_bits: 1

binary_sensor:
  - platform: status
    name: ${board_name}_Status

text_sensor:
  - platform: template
    name: ${board_name}_Uptime
    lambda: |-
      uint32_t dur = id(uptime_sensor).state;
      int dys = 0;
      int hrs = 0;
      int mnts = 0;
      if (dur > 86399) {
        dys = trunc(dur / 86400);
        dur = dur - (dys * 86400);
      }
      if (dur > 3599) {
        hrs = trunc(dur / 3600);
        dur = dur - (hrs * 3600);
      }
      if (dur > 59) {
        mnts = trunc(dur / 60);
        dur = dur - (mnts * 60);
      }
      char buffer[17];
      sprintf(buffer, "%ud %02uh %02um %02us", dys, hrs, mnts, dur);
      return {buffer};
    icon: mdi:clock-start
    update_interval: 15s

sensor:
  - platform: uptime
    name: ${board_name}_Uptime_s
    id: uptime_sensor
    update_interval: 15s

  - platform: wifi_signal
    name: ${board_name}_WiFi_RSSI
    update_interval: 60s

  - platform: adc
    pin: VCC
    name: ${board_name}_Vcc    

  - platform: pzemac
    current:
      name: ${board_name}_Current
    voltage:
      name: ${board_name}_Voltage
    energy:
      name: ${board_name}_Energy
    power:
      name: ${board_name}_Power
    frequency:
      name: ${board_name}_Frequency
    power_factor:
      name: ${board_name}_Power Factor
    update_interval: 15s
    
switch:
  - platform: restart
    name: ${board_name}_Restart

time:
  - platform: homeassistant
    id: homeassistant_time