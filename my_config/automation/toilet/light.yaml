# #####################################################################################
#
# TOILET - Light
#
# #####################################################################################
# Toilet - Timer restart with movement
# ################################## 
- alias: toilet_timer_restart
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: binary_sensor.0x158d0001e54280_motion
      from: 'off'
      to: 'on'
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: switch.0x158d0002a36f7f_channel_1
        state: 'on'
      - condition: state
        entity_id: light.esp32_bathroom_node_light
        state: 'on'
  action:
    - service: timer.cancel
      entity_id: timer.main_light_t  
    - service: timer.start
      entity_id: timer.main_light_t

# ##################################
# Toilet - Timer off
# ################################## 
# - alias: toilet_timer_off
#   initial_state: 'true'
#   trigger:
#     - platform: state
#       entity_id: switch.0x00158d0002a36f7f_switch_left #switch.wall_switch_left_158d0002a36f7f
#       to: 'off'
#       from: 'on'
#   action:
#     - service: timer.cancel
#       entity_id: timer.main_light_t
    
# ##################################
# Toilet - Timer start
# ################################## 
- alias: toilet_timer_on
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: switch.0x158d0002a36f7f_channel_1
      to: 'on'
      from: 'off'
    - platform: state
      entity_id: light.esp32_bathroom_node_light
      from: 'off'
      to: 'on'
  # condition:
  #   - condition: state
  #     entity_id: timer.main_light_t
  #     state: 'idle'
  action:
    - service: timer.cancel
      entity_id: timer.main_light_t  
    - service: timer.start
      entity_id: timer.main_light_t

# ##################################
# Toilet - Timer pause on
# ################################## 
# - alias: toilet_timer_pause_on
#   initial_state: 'true'
#   trigger:
#     - platform: state
#       entity_id: binary_sensor.0x00158d0001e54280_occupancy
#       from: 'off'
#       to: 'on'
#   condition:
#     - condition: state
#       entity_id: binary_sensor.0x158d000232ddd6_contact
#       state: 'off'
#     - condition: state
#       entity_id: switch.0x00158d0002a36f7f_switch_left
#       state: 'on'
#   action:
#     - service: timer.pause
#       entity_id: timer.main_light_t
#     - service: automation.turn_off
#       entity_id: automation.toilet_timer_restart
    
# ##################################
# Bathroom - Timer pause off
# ################################## 
# - alias: toilet_timer_pause_off
#   initial_state: 'true'
#   trigger:
#     - platform: state
#       entity_id: binary_sensor.0x158d000232ddd6_contact
#       from: 'off'
#       to: 'on'
#   condition:
#     - condition: state
#       entity_id: switch.0x00158d0002a36f7f_switch_left #switch.wall_switch_left_158d0002a36f7f
#       state: 'on'
#   action:
#     - service: timer.start
#       entity_id: timer.main_light_t
#     - service: automation.turn_on
#       entity_id: automation.toilet_timer_restart
    
# ##################################
# Toilet - Auto Light On
# ##################################
- alias: toilet_auto_light_on
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: binary_sensor.0x158d0001e54280_motion
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: sensor.0x158d0001b97111_action
      to: 'single'
    - platform: state
      entity_id: binary_sensor.0x158d000232ddd6_contact
      to: 'on'
      from: 'off'
  condition:
    - condition: state
      entity_id: switch.0x158d0002a36f7f_channel_1
      state: 'off'
    - condition: state
      entity_id: light.esp32_bathroom_node_light
      state: 'off'
  action:
    - service: homeassistant.turn_on
      data_template:
        entity_id: >
          {% if is_state('binary_sensor.tod_day','on') %}switch.0x158d0002a36f7f_channel_1{%else%}light.esp32_bathroom_node_light{%endif%}

# ##################################
# Toilet - Light On
# ##################################
- alias: toilet_light_on
  initial_state: 'false'
  trigger:
    - platform: state
      entity_id: sensor.0x158d0001b97111_action
      to: 'single'
    - platform: state
      entity_id: binary_sensor.0x158d000232ddd6_contact
      to: 'on'
      from: 'off'
  condition:
    - condition: state
      entity_id: switch.0x158d0002a36f7f_channel_1
      state: 'off'
    - condition: state
      entity_id: light.esp32_bathroom_node_light
      state: 'off'
  action:
    - service: switch.turn_on
      entity_id: switch.0x158d0002a36f7f_channel_1

# ##################################
# Toilet - Auto Light Off
# ##################################
- alias: toilet_auto_off
  initial_state: 'true'
  trigger:
    - platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.main_light_t
  action:
    - service: switch.turn_off
      entity_id: switch.0x158d0002a36f7f_channel_1
    - service: light.turn_off
      entity_id: light.esp32_bathroom_node_light

# ##################################
# Toilet - Auto Light off - No Motion 2m and Cover Closed
# ##################################
- alias: toilet_auto_light_off_no_motion_cover_closed
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: binary_sensor.0x158d0001e54280_motion
      to: 'off'
      for:
        minutes: 5
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: binary_sensor.0x158d000232ddd6_contact
        state: 'off'
      - condition: or
        conditions:
          - condition: state
            entity_id: switch.0x158d0002a36f7f_channel_1
            state: 'on'
          - condition: state
            entity_id: light.esp32_bathroom_node_light
            state: 'on'
  action:
    - service: timer.finish
      entity_id: timer.main_light_t

# ##################################
# Toilet - Light Toggle with Repeater
# ##################################
- alias: toilet_light_toggle
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.0x158d0001e0a622_action
      to: 'button_2_single'
  action:
    - service_template: homeassistant.turn_{% if is_state('switch.0x158d0002a36f7f_channel_1','on') or is_state('light.esp32_bathroom_node_light','on')%}off{%else%}on{%endif%}
      data_template:
        entity_id: >
          {% if is_state('switch.0x158d0002a36f7f_channel_1','off') and is_state('light.esp32_bathroom_node_light','off') %}
            switch.0x158d0002a36f7f_channel_1
          {% else %}
            switch.0x158d0002a36f7f_channel_1, light.esp32_bathroom_node_light
          {% endif %}

# ##################################
# Toilet - Indicator
# ##################################
- alias: toilet_indicator
  initial_state: 'true'
  mode: restart
  trigger:
    - platform: state
      entity_id: binary_sensor.0x158d000232ddd6_contact
      from: 'off'
      to: 'on'
    - platform: state
      entity_id: binary_sensor.0x158d000232ddd6_contact
      from: 'on'
      to: 'off'
  action:
    - choose:
        - conditions:
            - condition: state
              entity_id: binary_sensor.0x158d000232ddd6_contact
              state: 'off'
          sequence:
            - service: light.turn_off
              entity_id: light.btf_pixel_strip_toilet
        - conditions:
            - condition: state
              entity_id: binary_sensor.0x158d000232ddd6_contact
              state: 'on'
          sequence:
            - service: light.turn_on
              data_template:
                entity_id: light.btf_pixel_strip_toilet
                effect: 'Color Wipe'
                brightness_pct: 40
                
                
# - id: 'xxxxxxxxxxxxxx'
#   alias: 'Ванная: включить свет'
#   description: Если откроется дверь или в помещении обнаружится движение и свет выключен, то свет нужно включить.
#   trigger:
#   - type: opened
#     platform: device
#     device_id: xxxxxxxxxxxxxxxxxxxxxx
#     entity_id: binary_sensor.door_window_sensor_xxxxxxxxxxxxxxxxxxx
#     domain: binary_sensor
#   - type: motion
#     platform: device
#     device_id: xxxxxxxxxxxxxxxx
#     entity_id: binary_sensor.motion_sensor_xxxxxxxxxxxxxxxxxx
#     domain: binary_sensor
#   condition:
#   - condition: state
#     entity_id: input_boolean.vannaia_v_pomeshchenii_kto_to_est
#     state: 'off'
#   - condition: device
#     type: is_off
#     device_id: xxxxxxxxxxxxxxxxxxxxxxxxxxx
#     entity_id: switch.wall_switch_left_xxxxxxxxxxxxxxxxxxx
#     domain: switch
#   action:
#   - type: turn_on
#     device_id: xxxxxxxxxxxxxxxxxxxxxxx
#     entity_id: switch.wall_switch_left_xxxxxxxxxxxxxxxxxxxxxxx
#     domain: switch
#   mode: single
# - id: 'xxxxxxxxxxxxxxxxxxx'
#   alias: 'Ванная: включить блокировку в помещений кто-то есть'
#   description: Если дверь закрыта и внутри есть движение, значит в помещении точно
#     кто-то есть, свет не выключаем.
#   trigger:
#   - type: not_opened
#     platform: device
#     device_id: xxxxxxxxxxxxxxxxxxxxxxxxxxx
#     entity_id: binary_sensor.door_window_sensor_xxxxxxxxxxxxxxxxxxxx
#     domain: binary_sensor
#     for:
#       hours: 0
#       minutes: 3
#       seconds: 0
#   condition:
#   - type: is_motion
#     condition: device
#     device_id: xxxxxxxxxxxxxxxxxxxxxxxxxxxx
#     entity_id: binary_sensor.motion_sensor_xxxxxxxxxxxxxxxx
#     domain: binary_sensor
#   action:
#   - service: input_boolean.turn_on
#     data: {}
#     entity_id: input_boolean.vannaia_v_pomeshchenii_kto_to_est
#   mode: single
# - id: 'xxxxxxxxxxxxxxxxxxx'
#   alias: 'Ванная: автовключение света при включенном блокировки света'
#   description: Если включена блокировка света в ванной, то при физическом выключении
#     света, свет не выключится. Свет может выключится, если блокировка выключателя
#     выключена.
#   trigger:
#   - platform: device
#     type: turned_off
#     device_id: xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
#     entity_id: switch.wall_switch_left_xxxxxxxxxxxxxxxxxxxx
#     domain: switch
#   condition:
#   - condition: state
#     entity_id: input_boolean.vannaia_v_pomeshchenii_kto_to_est
#     state: 'on'
#   action:
#   - type: turn_on
#     device_id: xxxxxxxxxxxxxxxxxxxxxxxxxxx
#     entity_id: switch.wall_switch_left_xxxxxxxxxxxxxxxx
#     domain: switch
#   mode: single
# - id: 'xxxxxxxxxxxxxxx'
#   alias: 'Ванная: выключить свет'
#   description: 'Если в помещении никого нет, если дверь открыта, то свет выключить
#     и выключить блокировку света '
#   trigger:
#   - type: opened
#     platform: device
#     device_id: xxxxxxxxxxxxxxxxxxxxxxxxx
#     entity_id: binary_sensor.door_window_sensor_xxxxxxxxxxxxxxxxxxxx
#     domain: binary_sensor
#     for:
#       hours: 0
#       minutes: 0
#       seconds: 10
#   - type: not_opened
#     platform: device
#     device_id: xxxxxxxxxxxxxxxxxxxxxx
#     entity_id: binary_sensor.door_window_sensor_xxxxxxxxxxxxxxxxx
#     domain: binary_sensor
#   - type: no_motion
#     platform: device
#     device_id: xxxxxxxxxxxxxxxxxxx
#     entity_id: binary_sensor.motion_sensor_xxxxxxxxxxxxxxx
#     domain: binary_sensor
#     for:
#       hours: 0
#       minutes: 2
#       seconds: 0
#   condition:
#   - type: is_no_motion
#     condition: device
#     device_id: xxxxxxxxxxxxxxxxxxxxxxxxx
#     entity_id: binary_sensor.motion_sensor_xxxxxxxxxxxxxxxxxx
#     domain: binary_sensor
#   - condition: state
#     entity_id: input_boolean.vannaia_v_pomeshchenii_kto_to_est
#     state: 'off'
#   action:
#   - type: turn_off
#     device_id: xxxxxxxxxxxxxxxxxxxxx
#     entity_id: switch.wall_switch_left_xxxxxxxxxxxxxx
#     domain: switch
#   mode: single
# - id: 'xxxxxxxxxxxxxxxx'
#   alias: 'Ванная: выключить блокировку в помещений кто-то есть'
#   description: Если дверь закрыта и внутри есть движение, значит в помещении точно
#     кто-то есть, свет не выключаем.
#   trigger:
#   - type: opened
#     platform: device
#     device_id: xxxxxxxxxxxxxxxxxxxx
#     entity_id: binary_sensor.door_window_sensor_xxxxxxxxxxxxxxx
#     domain: binary_sensor
#   condition:
#   - condition: state
#     entity_id: input_boolean.vannaia_v_pomeshchenii_kto_to_est
#     state: 'on'
#   action:
#   - service: input_boolean.turn_off
#     data: {}
#     entity_id: input_boolean.vannaia_v_pomeshchenii_kto_to_est
#   mode: single
                